{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","refs","num","blur","onClick","state","number","margin10","margin20","margin30","margin40","nword","simple","_this2","react_default","a","createElement","className","style","marginTop","noValidate","paddingLeft","ref","placeholder","type","min","htmlFor","concat","toFixed","checked","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e54f811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      number: null,\n      margin10: false,\n      margin20: false,\n      margin30: true,\n      margin40: true,\n      nword: false,\n      simple: false\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.refs.num.value = null\n    this.refs.num.blur()\n  };\n\n \n  onClick = e => {\n    e.preventDefault();\n    this.refs.num.value = null\n  }; \n\n  render() {\n    return (\n      <div className=\"container floater \">\n\n\n\n\n\n        <div style={{ marginTop: \"4rem\" }} className=\"row \">\n          <div className=\"formed col s12 card-panel\">\n            <form noValidate onSubmit={this.onSubmit}>\n\n            <div className=\"col s12  center-align\" style={{ paddingLeft: \"11.250px\" }}> \n              <div>\n                <div id=\"txt\">\n                  <h3 className=\"text-bold text-center\">Margi</h3>\n                  <h3 onClick={() => this.setState({nword: !this.state.nword})}>n</h3>\n                  <h3>alize</h3>\n\n\n                </div>\n\n                <hr id=\"help\"/>\n              </div>\n\n\n            \n            </div>\n\n\n\n              <div className=\"input-field col s12 \">\n                <input\n                  ref=\"num\"\n                  onChange={this.onChange}\n                  value={this.state.number}\n                  placeholder=\"Enter item unit cost\"\n                  id=\"number\"\n                  type=\"number\"\n                  min=\"0\"\n                />\n                <label htmlFor=\"number\">Unit Cost</label>\n\n            \n\n                {\n                    this.state.simple ? \n                      <div>\n                        <p>I know... sorry</p>\n                        <blockquote>{`10% Margin is: ${((this.state.number / 0.7).toFixed(3))}`}</blockquote>\n                        <blockquote>{`20% Margin is: ${((this.state.number / 0.6).toFixed(3))}`}</blockquote>\n                        <blockquote>{`30% Margin is: ${((this.state.number / 0.7).toFixed(3))}`}</blockquote>\n                        <blockquote>{`40% Margin is: ${((this.state.number / 0.6).toFixed(3))}`}</blockquote>\n                      </div> : \n\n\n\n\n\n<div>\n<div className=\"col s12 card-panel\" style={{ paddingLeft: \"11.250px\" }}>\n                      <p>Margins To Display:</p>\n                      <hr />\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input type=\"checkbox\" onChange={() => this.setState({margin10: !this.state.margin10})}/>\n                          <span>10%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input type=\"checkbox\"  onChange={() => this.setState({margin20: !this.state.margin20})}/>\n                          <span>20%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input type=\"checkbox\" checked={this.state.margin30 ? 'checked' : ''} onChange={() => this.setState({margin30: !this.state.margin30})} />\n                          <span>30%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input type=\"checkbox\" checked={this.state.margin40 ? 'checked' : ''}  onChange={() => this.setState({margin40: !this.state.margin40})} />\n                          <span>40%</span>\n                        </label>\n                      </p>\n                      </div>\n\n\n                      <div className=\"col s12 card-panel\" style={{ paddingLeft: \"11.250px\" }}>\n\n                      {\n                        this.state.margin10 ? \n                          <div>\n                            <p className=\"text-bold\">10% Margin</p>\n                            <hr />\n                            <blockquote>{((this.state.number / 0.9).toFixed(3))}</blockquote>\n                          </div> : null\n                      }\n\n\n\n                      {\n                        this.state.margin20 ? \n                          <div>\n                            <p className=\"text-bold\">20% Margin</p>\n                            <hr />\n                            <blockquote>{((this.state.number / 0.8).toFixed(3))}</blockquote>\n                          </div> : null\n                      }\n\n                      {\n                        this.state.margin30 ? \n                          <div>\n                            <p className=\"text-bold\">30% Margin</p>\n                            <hr />\n                            <blockquote>{((this.state.number / 0.7).toFixed(3))}</blockquote>\n                          </div> : null\n                      }\n\n                      {\n                        this.state.margin40 ? \n                          <div>\n                            <p className=\"text-bold\">40% Margin</p>\n                            <hr />\n                            <blockquote>{((this.state.number / 0.6).toFixed(3))}</blockquote>\n                          </div> : null\n                      }    \n\n                      {\n                        this.state.nword ? \n                          <div className=\"center-align\">\n                            <hr />\n                            <p className=\"text-bold center-align\">N Word.</p>\n                          </div> : null\n                      }  \n\n\n                      </div>\n\n\n\n\n  </div>\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n                  }\n\n\n\n\n\n              </div>\n              <p className=\"col\">\n                  <label>\n                    <input type=\"checkbox\" onChange={() => this.setState({simple: !this.state.simple})}/>\n                    <span>This layout looks retarded...</span>\n                  </label>\n                </p>\n\n\n\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}