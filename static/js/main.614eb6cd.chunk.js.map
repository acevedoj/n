{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","refs","num","blur","onClick","state","number","margin10","margin20","margin30","margin40","nword","simple","options","_this2","react_default","a","createElement","className","style","marginTop","noValidate","paddingLeft","ref","type","min","htmlFor","Math","floor","random","length","concat","toFixed","checked","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.614eb6cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: null,\n      margin10: false,\n      margin20: false,\n      margin30: true,\n      margin40: true,\n      nword: false,\n      simple: false,\n      options: \n        [\"Jewmex - Joochan\", \"Tom's a pothead\", \n        \"Kimmy is a husband beater - Joochan\", \n        \"Where's the cookie dude? ._.\", \n        \"Reee - All of us\", \"Watch out for the black people - Teo\", \n        \"Do you guys sell phones? - Low IQ customer\", \n        \"Me estoy haciendo pendeja - Kimmy\", \n        \"Hahahahaha - Montse\", \"Fuck you - Michael\", \n        \"Out of stock - Montse\", \n        \"Chinito - Literally everyone at Campeon when referring to Joochan\", \n        \"Porque Mark siempre esta tan enojado? - Pedro\", \n        \"camepeon1234 - Campeon Head of Security\", \n        \"Mark what happened to your eyes? Are you High? - Andrea\", \n        \"This was not part of my job description - Lee when he thought someone died outside the store\",\n        \"Pinche Michael - Everyone\", \"Si alguien te da el Gatorade de lemon lime es porque eres especial - Andrea\",\n        \"Hellloooooooo - Gloria\",\n        \"Hell yeah - Joochan\",\n        \"Hola Campeon Market. 'Do you speak spanish?' ........\",\n      ]\n    };\n  }\n\n  //        [\":(\", \"I know... sorry..\", \"fuck you\", \"wow\", \"I tried my best\", \":/\", \"hm\", \"ah..\", \"I'll try harder next time\", \" I thought it looked nice.. guess not :?\", \"thanks anyways\", \"I'm crying now, hope you feel good about yourself\", \"Jewmex\"]\n\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.refs.num.value = null;\n    this.refs.num.blur();\n  };\n\n  onClick = e => {\n    e.preventDefault();\n    this.refs.num.value = null;\n  };\n\n  render() {\n    return (\n      <div className=\"container floater \">\n        <div style={{ marginTop: \"4rem\" }} className=\"row \">\n          <div className=\"formed col s12 card-panel\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <div\n                className=\"col s12  center-align\"\n                style={{ paddingLeft: \"11.250px\" }}\n              >\n                <div>\n                  <div id=\"txt\">\n                    <h3 className=\"text-bold text-center\">Margi</h3>\n                    <h3\n                      onClick={() =>\n                        this.setState({ nword: !this.state.nword, number: null})\n                      }\n                    >\n                      n\n                    </h3>\n                    <h3>alize</h3>\n                  </div>\n\n                  <hr id=\"help\" />\n                </div>\n              </div>\n\n              <div className=\"\">\n                <div className=\"input-field col s12 \">\n                  <input\n                    className=\"col s10 m10 xl11\"\n                    ref=\"num\"\n                    onChange={this.onChange}\n                    value={this.state.number}\n                    id=\"number\"\n                    type=\"number\"\n                    min=\"0\"\n                  />\n                  <label htmlFor=\"number\">Enter Unit Cost</label>\n\n                  <p\n                    onClick={this.onClick}\n                    className=\"aa valign-wrapper col s2 m2 waves-effect waves-light\"\n                  >\n                    <i className=\"valign-wrapper material-icons left\">close</i>\n                  </p>\n                </div>\n\n                {this.state.simple ? (\n                  <div>\n                    <p>{this.state.options[Math.floor(Math.random()*this.state.options.length)]}</p>\n                    <blockquote>{`10% Margin is: ${(\n                      this.state.number / 0.9\n                    ).toFixed(3)}`}</blockquote>\n                    <blockquote>{`20% Margin is: ${(\n                      this.state.number / 0.8\n                    ).toFixed(3)}`}</blockquote>\n                    <blockquote>{`30% Margin is: ${(\n                      this.state.number / 0.7\n                    ).toFixed(3)}`}</blockquote>\n                    <blockquote>{`40% Margin is: ${(\n                      this.state.number / 0.6\n                    ).toFixed(3)}`}</blockquote>\n                  </div>\n                ) : (\n                  <div>\n                    <div\n                      className=\"col s12 card-panel\"\n                      style={{ paddingLeft: \"11.250px\" }}\n                    >\n                      <p>Margins To Display:</p>\n                      <hr />\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            onChange={() =>\n                              this.setState({ margin10: !this.state.margin10 })\n                            }\n                          />\n                          <span>10%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            onChange={() =>\n                              this.setState({ margin20: !this.state.margin20 })\n                            }\n                          />\n                          <span>20%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={this.state.margin30 ? \"checked\" : \"\"}\n                            onChange={() =>\n                              this.setState({ margin30: !this.state.margin30 })\n                            }\n                          />\n                          <span>30%</span>\n                        </label>\n                      </p>\n\n                      <p className=\"col s6 m6 xl3\">\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={this.state.margin40 ? \"checked\" : \"\"}\n                            onChange={() =>\n                              this.setState({ margin40: !this.state.margin40 })\n                            }\n                          />\n                          <span>40%</span>\n                        </label>\n                      </p>\n                    </div>\n\n                    <div\n                      className=\"col s12 card-panel\"\n                      style={{ paddingLeft: \"11.250px\" }}\n                    >\n                      {this.state.margin10 ? (\n                        <div>\n                          <p className=\"text-bold\">10% Margin</p>\n                          <hr />\n                          <blockquote>\n                            {(this.state.number / 0.9).toFixed(3)}\n                          </blockquote>\n                        </div>\n                      ) : null}\n\n                      {this.state.margin20 ? (\n                        <div>\n                          <p className=\"text-bold\">20% Margin</p>\n                          <hr />\n                          <blockquote>\n                            {(this.state.number / 0.8).toFixed(3)}\n                          </blockquote>\n                        </div>\n                      ) : null}\n\n                      {this.state.margin30 ? (\n                        <div>\n                          <p className=\"text-bold\">30% Margin</p>\n                          <hr />\n                          <blockquote>\n                            {(this.state.number / 0.7).toFixed(3)}\n                          </blockquote>\n                        </div>\n                      ) : null}\n\n                      {this.state.margin40 ? (\n                        <div>\n                          <p className=\"text-bold\">40% Margin</p>\n                          <hr />\n                          <blockquote>\n                            {(this.state.number / 0.6).toFixed(3)}\n                          </blockquote>\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {this.state.nword ? (\n                <div className=\"center-align\">\n                  <hr />\n                  <p className=\"text-bold center-align\">N Word.</p>\n                </div>\n              ) : null}\n\n              <p className=\"col\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() =>\n                      this.setState({\n                        simple: !this.state.simple,\n                        margin10: false,\n                        margin20: false,\n                        margin30: false,\n                        margin40: false\n                      })\n                    }\n                  />\n                  <span>This layout looks retarded...</span>\n                </label>\n              </p>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}